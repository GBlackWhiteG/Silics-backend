version: '3'

services:
    nginx:
        image: nginx:latest
        volumes:
            - ./:/var/www
            - ./_docker/nginx/conf.d:/etc/nginx/conf.d
        ports:
            - "8876:80"
        depends_on:
            - app
        container_name: project_nginx
        networks:
            - app-network

    app:
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        volumes:
            - ./:/var/www
            #            -   /var/run/docker.sock:/var/run/docker.sock
            - ./code-share:/var/www/code
        container_name: project_app
        networks:
            - app-network

    reverb:
        build:
            context: .
            dockerfile: _docker/app/Dockerfile
        volumes:
            -   ./:/var/www
        container_name: project_reverb
        hostname: '0.0.0.0'
        ports:
            -   "8080:8080"
        command: ['php', 'artisan', 'reverb:start', '--host=0.0.0.0', '--port=8080']
        depends_on:
            -   redis
        networks:
            - app-network

    postgres:
        image: postgres:15
        restart: always
        environment:
            POSTGRES_DB: SilicsDB
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: parol372
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "5433:5432"
        container_name: project_postgres
        networks:
            - app-network

    rabbitmq:
        image: rabbitmq:3-management
        container_name: project_rabbitmq
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: guest
            RABBITMQ_DEFAULT_PASS: guest
        restart: always
        networks:
            - app-network

    redis:
        image: redis:7.4.2
        container_name: project_redis
        ports:
            - "6380:6379"
        volumes:
            - redisdata:/var/lib/redis/data
        networks:
            - app-network

    php-runner:
        build:
            context: .
            dockerfile: _docker/php/Dockerfile
        volumes:
            - ./code-share/php:/var/www/code/php
        container_name: php_runner
        networks:
            - app-network

    python-runner:
        build:
            context: .
            dockerfile: _docker/python/Dockerfile
        volumes:
            -   ./code-share:/var/www/code
        working_dir: /var/www
        container_name: python_runner
        networks:
            - app-network

    js-runner:
        build:
            context: .
            dockerfile: _docker/js/Dockerfile
        volumes:
            -   ./code-share:/var/www/code
        working_dir: /var/www
        container_name: js_runner
        networks:
            - app-network

volumes:
    pgdata:
    redisdata:
    code-share:

networks:
    app-network:
        driver: bridge